name: CD Pipeline

on:
  workflow_run:
    workflows: [ "CI Pipeline" ]
    types: [ "completed" ]

jobs:

  deploy:

    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Clean up disk space
      run: |
        # Show initial disk usage
        echo "Initial disk usage:"
        df -h
        
        # Run comprehensive cleanup script if available
        if [ -f "server/scripts/cleanup.sh" ]; then
          echo "Running comprehensive cleanup script..."
          chmod +x server/scripts/cleanup.sh
          ./server/scripts/cleanup.sh
        else
          echo "Cleanup script not found, running basic cleanup..."
          # Basic cleanup fallback
          sudo docker system prune -af --volumes || true
          sudo docker image prune -af || true
          sudo docker container prune -f || true
          sudo docker network prune -f || true
          sudo find /var/log -name "*.log" -type f -mtime +7 -delete || true
        fi
        
        # Show final disk usage
        echo "Final disk usage:"
        df -h

    - name: Set up environment file
      run: |
        echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > server/.env
        echo "NODE_ENV=production" >> server/.env
        echo "PORT=8000" >> server/.env
        echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN || '*' }}" >> server/.env
        echo "LOG_LEVEL=${{ secrets.LOG_LEVEL || 'info' }}" >> server/.env

    - name: Stop existing containers
      run: |
        cd server
        sudo docker compose -f docker-compose.prod.yml down || true

    - name: Build and start application
      run: |
        cd server
        sudo docker compose -f docker-compose.prod.yml up -d --build

    - name: Post-deployment cleanup
      run: |
        # Clean up any temporary files created during build
        sudo find /tmp -name "docker*" -type d -mtime +1 -exec rm -rf {} + 2>/dev/null || true
        sudo find /var/tmp -name "docker*" -type d -mtime +1 -exec rm -rf {} + 2>/dev/null || true
        
        # Show final disk usage
        echo "Post-deployment disk usage:"
        df -h

